                    Архитектура
                     проекта 1

                  Крестики-Нолики


=================== Общий раздел ===================

1. Вид релиза приложения

    Набор файлов с кодом для интерпретатора Python 3.10



2. Структура файлов приложения

    Модуль верхнего уровня, содержащий управляющий код и импорт дополнительных модулей.

    Дополнительные модули, содержащие функциональный код и работу с модулями/пакетами стандартной библиотеки.

    Текстовые файлы данных, содержащие информацию об игроках и сохранённых играх.



3. Структура хранения данных
    Внешним хранилищем данных является файл options.ini в формате:

[Main]
; Запускалось ли хоть раз приложение
NoFirstRun = 0

[Players]
; имя игрока = победы,ничьи,поражения,включен режим обучения
Player1 = 2,5,1,0
Player2 = 0,0,0,0
Player3 = 0,0,0,1

; Сохранение игры, имя раздела = <Имя игрока Х>:<Имя игрока 0>
; бот обозначаем #<номер уровня> - 1 легкий, 2 сложный
[Player1:Player2]
; игровое поле представим в виде координатной сетки
; 0 | 1 | 2
;-----------
; 3 | 4 | 5
;-----------
; 6 | 7 | 8
;
; ходы записываем в формате: <список ходов Х>|<список ходов 0>,
; список ходов содержит последовательность координат игрового поля,
; выбранных игроком, разделенных запятой
turns = 2,5,1|4,8

[Player3:#1]
; ходы в формате списка из двух элементов: список ходов Х и список ходов 0
; список ходов представляет собой список из элементов, каждый из которого
; является ходом, представленным парой координат (x, y)
turns = 2,5,1|4,8



4. Работа с данными в приложении

    4.1 Структура данных для работы с ходами представляет собой список из трех списков, элементом которых является номер хода игроков. В таком представлении нечетные значения - ходы Х, четные - ходы О, нули - пустые поля.

        Пример:
        [ [0, 5, 1],
          [0, 2, 3],
          [0, 0, 4] ]

    4.2 Ключевым значением для определения игрока является его имя (ник), введенное при соответствующем запросе.

    4.3 Структура данных для игроков представляет собой словарь из двух элементов:

        0. curr_player - индекс (0 или 1) активного игрока, то есть которому предоставлено право хода, соответственно играющему за X или O

        1. player список из двух элементов, каждый из которых является словарем из атрибутов игрока (в реализации 'name' - имя и 'age' - возраст *справочно)

        Пример:

            {'curr_player': 0,
             'player': [
                {'name': 'Серега', 'age': 18},
                {'name': 'Вася','age': 12}
             ]
            }
